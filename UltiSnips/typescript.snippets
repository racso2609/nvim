snippet clg "console.log()" b
console.log(${1:'$2', $2})
endsnippet

snippet error ".get(async(req,res)=>{})"
return next(new AppError("$1",$2))

endsnippet

snippet impErr "imp asyncHandler and app error"
import {asyncHandler} from '../utils/asyncHandler'
import {AppError} = from '../utils/AppError'
endsnippet

snippet asH "asyncHandler"
asyncHandler(async(req:Request,res:Response,_next:NextFunction)=>{

})
endsnippet

snippet router "express router"
import express = require('express');
const router = express.Router();



const $1 = router;
export default $1;
endsnippet

snippet body "req.body"
const {} = req.body;
endsnippet

snippet params "req.params"
const {} = req.params;
endsnippet

snippet clo "console.log(hola)" b
console.log($1)
endsnippet

snippet try "try and catch"
try{

}catch(${1:error}){

}
endsnippet

snippet res.status "res.json"
res.status($1)
.json({
	success: true,
	status: "success",
	$2
})
endsnippet
snippet res "res.json"
res
.json({
	success: true,
	status: "success",
	$2
})
endsnippet

snippet it "it('', () => {})" b
it('$1', () => {
  $2
})
endsnippet

snippet desc "describe('', () => {})" b
describe('$1', () => {
  $2
})
endsnippet

snippet const "const = " b
const ${1:{ $2 }} = ${3:{
  $4
}}
endsnippet

snippet rfc "React function component" b
import React from 'react'
const $1:FC = ${2:($3)} => {
  return (
    <$4>
      $5
    </$4>
  )
}

export default $1
endsnippet

snippet rnfc "React native function component" b
import React from 'react'
import { ${4} } from 'react-native'

const $1:FC = ${2:($3)} => {
  return (
    <$4>
      $5
    </$4>
  )
}

export default $1
endsnippet

snippet rcc "React class component" b
import { Component } from 'react'

class $1 extends Component {
  render() {
    return (
      <div>
        ${2:// here...}
      </div>
    )
  }
}

export default $1
endsnippet

